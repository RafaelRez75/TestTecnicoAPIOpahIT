{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2025-10-22T22:53:37.312Z",
    "end": "2025-10-22T22:53:38.864Z",
    "duration": 1552,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7a9378c2-5431-484c-ad6c-ea7df0b1af3e",
      "title": "",
      "fullFile": "cypress\\e2e\\api\\usuarios.cy.js",
      "file": "cypress\\e2e\\api\\usuarios.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "41ca86c1-9f98-44e9-97f4-676e3040dcb8",
          "title": "API Usuários - ServeRest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve listar todos os usuários",
              "fullTitle": "API Usuários - ServeRest Deve listar todos os usuários",
              "timedOut": null,
              "duration": 887,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: '/usuarios'\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('usuarios');\n  expect(response.body.usuarios).to.be.an('array');\n});",
              "err": {},
              "uuid": "2f1f03de-44de-4c9b-bacc-a29900136181",
              "parentUUID": "41ca86c1-9f98-44e9-97f4-676e3040dcb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve criar um novo usuário",
              "fullTitle": "API Usuários - ServeRest Deve criar um novo usuário",
              "timedOut": null,
              "duration": 335,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const userData = {\n  nome: \"Usuario Teste\",\n  email: `teste${Date.now()}@qa.com`,\n  password: \"teste123\",\n  administrador: \"true\"\n};\ncy.createUser(userData).then(response => {\n  expect(response.status).to.eq(201);\n  expect(response.body).to.have.property('message', 'Cadastro realizado com sucesso');\n  expect(response.body).to.have.property('_id');\n});",
              "err": {},
              "uuid": "d379efc8-4b4f-439e-b2a6-35edfe2823ee",
              "parentUUID": "41ca86c1-9f98-44e9-97f4-676e3040dcb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve retornar erro ao criar usuário com email duplicado",
              "fullTitle": "API Usuários - ServeRest Deve retornar erro ao criar usuário com email duplicado",
              "timedOut": null,
              "duration": 215,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const userData = {\n  nome: \"Usuario Duplicado\",\n  email: \"fulano@qa.com\",\n  // Email já existente\n  password: \"teste123\",\n  administrador: \"true\"\n};\ncy.createUser(userData).then(response => {\n  expect(response.status).to.eq(400);\n  expect(response.body).to.have.property('message', 'Este email já está sendo usado');\n});",
              "err": {},
              "uuid": "05fb272f-ebf9-4203-a554-921e7014c78f",
              "parentUUID": "41ca86c1-9f98-44e9-97f4-676e3040dcb8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2f1f03de-44de-4c9b-bacc-a29900136181",
            "d379efc8-4b4f-439e-b2a6-35edfe2823ee",
            "05fb272f-ebf9-4203-a554-921e7014c78f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1437,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.4"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.3.0"
    }
  }
}